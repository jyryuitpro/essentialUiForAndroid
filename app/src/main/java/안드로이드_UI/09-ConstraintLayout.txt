ConstraintLayout
- 제약을 통해서 뷰를 배치하는 컨테이너뷰
- RelativeLayout에서! 할 수 있는 모든 것이 가능하다
- 기능이 엄청나게 많다
- 반대 방향으로 작용하는 두개의 제약을 동시에 적용하면 두 제약의 가운데에 배치된다

1> 상대적 위치 배치 (RelativeLayout의 기능)
    - layout_constraint(공통) + 제약이름
    - 예시) layout_constraintLeft_toLeftOf
        - B Left_toLeftOf A
            - Left -> 속성이 적용되는 뷰의 Left
            - toLeftOf -> Of 다음에 올 뷰의 Left
        - A가 될 수 있는 것들
            - 아이디로 설정된 뷰 들
            - parent
                - B Left_toLeftOf parent (B의 왼쪽을 parent의 왼쪽에 맞춰라)
    - 예시) layout_constraint(뷰)Left_toLeftOf(뷰)

2> 여백
- 해당 방향으로 여백을 두기 위해서는 반드시 그쪽 방향에 제약이 있어야 한다
- layout_marginLeft = 100dp 이렇게 하고 싶다면?
- 정답> layout_constraint(뷰)Left_toLeftOf(뷰) = parent 가 같이 제약이 있어야 한다

3> Bias(치우침)
- layout_constraintHorizontal_bias = 값
- layout_constraintVertical_bias = 값
- 값
    - 비율로 설정을 해준다
    - 1인 경우 100%치우친다
    - 0.5인경우 50% 치우친다 -> 변화가 없음